// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 6.0.2 effective-5.10 (swiftlang-6.0.2.1.2 clang-1600.0.26.4)
// swift-module-flags: -target arm64-apple-ios14.0-macabi -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -enable-bare-slash-regex -module-name KochavaEnhancement
// swift-module-flags-ignorable: -no-verify-emitted-module-interface
import Foundation
import JavaScriptCore
@_exported import KochavaEnhancement
import KochavaNetworking
import OSLog
import Swift
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
public var shared: KochavaNetworking.Product {
  get
}
@_hasMissingDesignatedInitializers @objc(KVAEnhancement) final public class Enhancement : ObjectiveC.NSObject, KochavaNetworking.ConfigurableWith, KochavaNetworking.ConfigurableWithWithOptions, KochavaNetworking.DecodableFrom, KochavaNetworking.DecodableFromWithInitializedObject, KochavaNetworking.EncodableTo, KochavaNetworking.Executor, KochavaNetworking.Invalidatable, KochavaNetworking.InvalidatableWithOptions, KochavaNetworking.Keyable, os.Logger.Provider, KochavaNetworking.Networking.RequiredProvider, KochavaNetworking.SharedInstanceProvider, KochavaNetworking.Startable, KochavaNetworking.StartableWithOptions, KochavaNetworking.Stoppable, KochavaNetworking.StoppableWithOptions {
  @objc public static var shared: KochavaEnhancement.Enhancement {
    @objc get
  }
  @objc public static var shared_optional: KochavaEnhancement.Enhancement? {
    @objc get
  }
  @objc public static var sharedInstance: Any {
    @objc get
  }
  @objc(initWithStorageIdentifier:) convenience public init(storageIdentifier: KochavaNetworking.Networking.StorageIdentifier? = nil)
  @objc deinit
  public static func from(_ object: Any?) -> Self?
  @discardableResult
  public static func from(_ object: Any?, initializedObject: Any?) -> Self?
  final public func to(context: KochavaNetworking.Context?) -> Any?
  @objc(configureWith:context:) final public func configure(with object: Any?, context: KochavaNetworking.Context?)
  @objc final public func configure(with object: Any?, context: KochavaNetworking.Context?, logMessagePrintBool: Swift.Bool, asyncBool: Swift.Bool)
  @objc final public func start()
  @objc final public func start(logMessagePrintBool: Swift.Bool, asyncBool: Swift.Bool)
  @objc final public func stop()
  @objc final public func stop(logMessagePrintBool: Swift.Bool, asyncBool: Swift.Bool)
  public static let logger: os.Logger
  final public func key(context: KochavaNetworking.Context?) -> Swift.AnyHashable?
  @objc override final public var description: Swift.String {
    @objc get
  }
  public static let type_kochava: KochavaNetworking.Kochava_Type
  final public var execution: KochavaNetworking.Execution {
    get
  }
  @objc final public func invalidate()
  @objc final public func invalidate(logMessagePrintBool: Swift.Bool, asyncBool: Swift.Bool)
  @objc final public var general: KochavaEnhancement.Enhancement.General {
    @objc get
  }
  @objc final public var networking: KochavaNetworking.Networking {
    @objc get
  }
  @objc public static var sharedNetworkingLinkAutomaticallyBool: Swift.Bool {
    @objc get
    @objc set(sharedNetworkingLinkAutomaticallyBool)
  }
  @objc public static var sharedStorageIdentifier: KochavaNetworking.Networking.StorageIdentifier? {
    @objc get
    @objc set(sharedStorageIdentifier)
  }
}
extension KochavaEnhancement.Enhancement : JavaScriptCore.JSExport {
}
extension KochavaEnhancement.Enhancement {
  @_hasMissingDesignatedInitializers @objc(KVAEnhancement_General) final public class General : ObjectiveC.NSObject, KochavaNetworking.ConfigurableWith, KochavaNetworking.DecodableFrom, KochavaNetworking.DecodableFromWithInitializedObject, KochavaNetworking.EncodableTo, KochavaNetworking.Executor, KochavaNetworking.Invalidatable, KochavaNetworking.Keyable, os.Logger.Provider, KochavaNetworking.Startable {
    public static func from(_ object: Any?) -> Self?
    @discardableResult
    public static func from(_ object: Any?, initializedObject: Any?) -> Self?
    final public func to(context: KochavaNetworking.Context?) -> Any?
    final public func configure(with object: Any?, context: KochavaNetworking.Context?)
    final public func start()
    public static let logger: os.Logger
    final public func key(context: KochavaNetworking.Context?) -> Swift.AnyHashable?
    public static let type_kochava: KochavaNetworking.Kochava_Type
    final public var execution: KochavaNetworking.Execution {
      get
    }
    final public func invalidate()
    final public var storageIdentifierAdapter: KochavaNetworking.Adapter {
      get
    }
    @objc deinit
  }
}
@_inheritsConvenienceInitializers @objc(KochavaEnhancement_Product) final public class Product : ObjectiveC.NSObject, os.Logger.Provider, KochavaNetworking.SharedInstanceProvider {
  @objc public static var shared: KochavaNetworking.Product {
    @objc get
  }
  public static var sharedInstance: Any {
    get
  }
  public static let logger: os.Logger
  @objc override dynamic public init()
  @objc deinit
}
